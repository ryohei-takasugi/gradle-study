/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

// apply from: 'maven.gradle'

// repositories {
//     // Use Maven Central for resolving dependencies.
//     mavenCentral()
//     maven {
//         url 'https://localhost:8081/app'
//         credentials {
//             username 'admin'
//             password 'nexus'
//         }
//     }
//     mavenLocal()
// }

group project.group
version project.version


dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.7'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'junit:junit:4.13.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'

    // you can use testRuntimeClasspath if you don't want to use spock-report-specific features in your Specs
    testImplementation( "com.athaydes:spock-reports:2.1.1-groovy-3.0" )
    // if you don't already have slf4j-api and an implementation of it in the classpath, add this!
    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.30'
}

application {
    // Define the main class for the application.
    mainClass = 'javaSample.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
